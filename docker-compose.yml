version: '3.9'

services:
  redis:
    image: redis:latest
    container_name: redis_container
    hostname: redis
    ports:
      - "6379:6379"
    networks:
      - app_network
    restart: always
  pgdb:
    container_name: pgdb
    hostname: pgdb
    image: postgres:17.4-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: root
      POSTGRES_DB: db
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - app_network
    ports:
      - "5434:5432"
  arq-worker:
    container_name: arq-worker
    build:
      context: .
      dockerfile: arq.Dockerfile
    working_dir: /app
    entrypoint: arq
    command: src.tasks.arq_settings.WorkerSettings
    environment:
      - ENVIRONMENT=docker
    volumes:
      - ./src:/app/src
    networks:
      - app_network
    depends_on:
      - redis
      - pgdb
  litestar-app:
    container_name: litestar-app-container
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /app
    command: ["litestar", "--app", "src.app:app", "run", "--host", "0.0.0.0", "--port", "8000"]
    environment:
      - ENVIRONMENT=docker
    volumes:
      - ./src:/app/src
    networks:
      - app_network
    expose:
      - 8000
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - pgdb
  playwright:
    image: mcr.microsoft.com/playwright:v1.50.0-noble
    container_name: playwright
    working_dir: /home/pwuser
    user: pwuser
    environment:
      - DEBUG=pw:*,playwright:*  # Расширенное логирование
      - PWDEBUG=1  # Включает расширенный режим отладки
    ports:
      - "3000:3000"
    command: /bin/sh -c "npx -y playwright@1.50.0 run-server --port 3000 --host 0.0.0.0"
    networks:
      - app_network

volumes:
  pg_data:

networks:
  app_network:
